openapi: 3.0.2
info:
  title: Quantum Services
  description: This API enables the generation of quantum services.
  version: '1.0'
  termsOfService: 'https://quantum.spilab.es/terms'
  contact:
    name: Spilab
    url: 'https://spilab.es'
    email: info@spilab.es
tags:
  - name: quantum
    description: Everything about your Quantum Service
  - name: quantum_code
    description: Everything about your quantum service code and circuits
paths:
  /circuit/Bernstein-Vazirani-IBM-circuit:
    get:
      tags:
        - quantum_code
      summary: Get the circuit implementation of Bernstein-Vazirani Algorithm
      description: ''
      operationId: Bernstein-Vazirani-IBM-circuit
      parameters:
        - name: machine
          in: query
          description: Algorithm that tries to learn a string encoded in a function
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: string
        - name: shots
          in: query
          description: Number of shots
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid execution
      x-quantumCode: 'https://algassert.com/quirk#circuit={%22cols%22:[[%22H%22,%22H%22,%22H%22,%22H%22,%22H%22],[%22Measure%22,%22Measure%22,%22Measure%22,%22Measure%22,%22Measure%22]]}'
      x-quantumProvider: 'ibm'
  /circuit/Bernstein-Vazirani-AWS-circuit:
    get:
      tags:
        - quantum_code
      summary: Get the circuit implementation of Bernstein-Vazirani Algorithm
      description: ''
      operationId: Bernstein-Vazirani-AWS-circuit
      parameters:
        - name: machine
          in: query
          description: Algorithm that tries to learn a string encoded in a function
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: string
        - name: shots
          in: query
          description: Number of shots
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid execution
      x-quantumCode: 'https://algassert.com/quirk#circuit=%7B%22cols%22:%5B%5B%22H%22,%22H%22,%22H%22,%22H%22%5D,%5B%22X%22%5D,%5B%22X%22,%22X%22,%22X%22,%22X%22%5D,%5B1,%22%E2%80%A2%22,%22X%22%5D,%5B1,%22X%22,%22%E2%80%A2%22%5D,%5B1,%22%E2%80%A2%22,%22X%22%5D,%5B1,1,%22%E2%80%A2%22,%22X%22%5D,%5B1,1,%22X%22,%22%E2%80%A2%22%5D,%5B1,1,%22%E2%80%A2%22,%22X%22%5D,%5B%22%E2%80%A2%22,1,1,%22X%22%5D,%5B%22X%22,1,1,%22%E2%80%A2%22%5D,%5B%22%E2%80%A2%22,1,1,%22X%22%5D,%5B%22Measure%22,%22Measure%22,%22Measure%22,%22Measure%22%5D%5D%7D'
      x-quantumProvider: 'aws'
  /circuit/Bernstein-Vazirani-IBM-code:
    get:
      tags:
        - quantum_code
      summary: Get the circuit implementation of Bernstein-Vazirani Algorithm
      description: ''
      operationId: Bernstein-Vazirani-IBM-code
      parameters:
        - name: machine
          in: query
          description: Algorithm that tries to learn a string encoded in a function
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: string
        - name: shots
          in: query
          description: Number of shots
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: number
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid execution
      x-quantumCode: 'https://bitbucket.org/spilab/quantum-circuits-code/raw/3f6f114350c81ed728955e68a84fb34d1154fa17/Bernstein-Vazirani.py'
      x-quantumProvider: 'ibm'
      
  /findByCategory:
    get:
      tags:
        - quantum
      summary: Finds quantum service by category
      description: Multiple status values can be provided with comma separated strings
      operationId: findServiceByCategory
      parameters:
        - name: qua
          in: query
          description: Status values that need to be considered for filter
          required: true
          style: form
          explode: false
          deprecated: true
          schema:
            type: array
            items:
              type: string
              enum:
                - annealing
                - gate-based
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/quantum'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/quantum'
        '400':
          description: Invalid status value
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
components:
  schemas:
    Category:
      title: quantum category
      description: A category for a quantum code
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: ^[a-zA-Z0-9]+[a-zA-Z0-9\.\-_]*[a-zA-Z0-9]+$
      xml:
        name: Category
    quantum:
      title: quantum code
      description: quantum code 
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: gate-based
      xml:
        name: quantum